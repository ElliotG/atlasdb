// -*- groovy -*-
// METABUILD GENERATED metaconf/metaconf.groovy + metaconf/project/make.gradle.tmpl -> atlasdb/atlasdb-rocksdb-tests/make.gradle
apply from: "${rootProject.projectDir}/before.gradle"
sourceSets.main.java.srcDirs=[  ]
sourceSets.main.resources.srcDirs=[  ]
sourceSets.test.java.srcDirs=[ file('src/test/java') ]
sourceSets.test.resources.srcDirs=[  ]
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
configurations.create('test').extendsFrom(configurations.testRuntime)
jar {
  baseName 'atlasdb-rocksdb-tests'
  exclude '.gitkeep'
  doFirst {
    manifest {
      from rootProject.ext.standardManifest
      def jarList = processJarListForManifest(sourceSets.main.compileClasspath)
      if (!jarList.isEmpty()) {
        attributes.put('Class-Path', jarList.join(' '))
      }
    }
  }
  doLast {
    rootProject.ext.pgdevArtifactNames.add(archiveName)
  }
}
task testJar(type: Jar) {
  baseName 'atlasdb-rocksdb-tests-test'
  from sourceSets.test.output
  exclude '.gitkeep'
  ext.is_test = true
  doFirst {
    manifest {
      from rootProject.ext.standardManifest
      def jarList = processJarListForManifest(sourceSets.test.compileClasspath)
      if (!jarList.isEmpty()) {
        attributes.put('Class-Path', jarList.join(' '))
      }
    }
  }
  doLast {
    rootProject.ext.pgdevArtifactNames.add(archiveName)
  }
}
assemble.dependsOn testJar
task mainSourcesZip(type: Zip) {
  baseName 'atlasdb-rocksdb-tests'
  from sourceSets.main.allSource
}
assemble.dependsOn mainSourcesZip
task testSourcesZip(type: Zip) {
  baseName 'atlasdb-rocksdb-tests-test'
  from sourceSets.test.allSource
}
assemble.dependsOn testSourcesZip
dependencies {
  test sourceSets.test.output
  testCompile(group: 'junit', name: 'junit', version: '4.11', configuration: 'default')
  testCompile(project(path: ':atlasdb-rocksdb', configuration: 'test'))
  compile(project(path: ':atlasdb-rocksdb', configuration: 'default'))
  testCompile(project(path: ':atlasdb-tests-shared', configuration: 'test'))
  compile(project(path: ':atlasdb-tests-shared', configuration: 'default'))
}
apply from: "${rootProject.projectDir}/after.gradle"
