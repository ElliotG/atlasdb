buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://dl.bintray.com/palantir/releases/'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
        classpath 'com.palantir:jacoco-coverage:0.1.4'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

plugins {
    id 'com.palantir.git-version' version '0.1.3'
    id 'org.inferred.processors' version '1.1'
}

apply from: 'gradle/versions.gradle'

group = 'com.palantir.atlasdb'
version = '0.8.0'
description = 'Transactional distributed database layer'

task clean(type: Delete) {
    delete buildDir
}

apply from: 'idea.gradle'

def ideaSetModuleLevel(idea, targetCompatibility) {
    if (idea == null) return
    idea.module.jdkName = targetCompatibility
    idea.module.iml.withXml {
        it.asNode().component.find { it.@name == 'NewModuleRootManager' }.@LANGUAGE_LEVEL = ("JDK_" + targetCompatibility).replaceAll('\\.', '_')
    }
}

allprojects {
    // This allows tests that require an artefact to exist to
    // decide whether to call gradle themselves or not
    tasks.withType(Test) {
        systemProperty 'RUNNING_IN_GRADLE', 'true'
    }
}
